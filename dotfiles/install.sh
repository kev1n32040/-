#!/usr/bin/env python3
import os
import shutil
import subprocess
import platform
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥–∏ –∏ –ø—É—Ç–∏
CONFIG_DIR = Path.home() / ".config"
BACKUP_DIR = Path.home() / ".config_backup"
SOURCE_DIR = Path("dotfiles")

# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤
DEPS = {
    "arch": [
        "polybar", "i3-wm", "ulauncher", "picom", "feh", "zenity",
        "python-nautilus", "libkeybinder3", "flameshot", 
        "nerd-fonts-jetbrains-mono"
    ],
    "debian": [
        "polybar", "i3", "ulauncher", "picom", "feh", "zenity",
        "python3-nautilus", "libkeybinder-3.0-0", "flameshot",
        "fonts-jetbrains-mono"
    ],
    "fedora": [
        "polybar", "i3", "ulauncher", "picom", "feh", "zenity",
        "python3-nautilus", "keybinder3", "flameshot",
        "jetbrains-mono-fonts"
    ]
}

def get_distro():
    """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é os-release"""
    try:
        with open("/etc/os-release") as f:
            content = f.read().lower()
            if "arch" in content or "endeavouros" in content:
                return "arch"
            elif "debian" in content or "ubuntu" in content:
                return "debian"
            elif "fedora" in content:
                return "fedora"
    except FileNotFoundError:
        pass

    if shutil.which("apt-get"):
        return "debian"
    elif shutil.which("dnf"):
        return "fedora"
    return "unknown"

def install_deps(distro):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞"""
    print(f"üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è {distro}...")
    
    if distro == "arch":
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ yay –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        if not shutil.which("yay"):
            subprocess.run(["sudo", "pacman", "-S", "--noconfirm", "git", "base-devel"])
            subprocess.run(["git", "clone", "https://aur.archlinux.org/yay.git"])
            os.chdir("yay")
            subprocess.run(["makepkg", "-si", "--noconfirm"])
            os.chdir("..")
            shutil.rmtree("yay")
        
        subprocess.run(["yay", "-S", "--noconfirm"] + DEPS["arch"])
    
    elif distro == "debian":
        subprocess.run(["sudo", "apt-get", "update"])
        subprocess.run(["sudo", "apt-get", "install", "-y"] + DEPS["debian"])
    
    elif distro == "fedora":
        subprocess.run(["sudo", "dnf", "install", "-y"] + DEPS["fedora"])
    
    else:
        print("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤!")
        exit(1)

def backup_configs():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤"""
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞...")
    BACKUP_DIR.mkdir(exist_ok=True)
    
    for item in CONFIG_DIR.iterdir():
        if item.name in ["i3", "polybar", "picom.conf", "ulauncher"]:
            target = BACKUP_DIR / item.name
            if target.exists():
                shutil.rmtree(target) if target.is_dir() else target.unlink()
            shutil.move(str(item), str(target))

def deploy_configs():
    """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤"""
    print("üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤...")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏
    shutil.copytree(SOURCE_DIR / "i3", CONFIG_DIR / "i3", dirs_exist_ok=True)
    shutil.copytree(SOURCE_DIR / "polybar", CONFIG_DIR / "polybar", dirs_exist_ok=True)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
    scripts = [
        CONFIG_DIR / "i3" / "power-menu.sh",
        CONFIG_DIR / "i3" / "ulauncher-toggle.sh"
    ]
    for script in scripts:
        script.chmod(0o755)

def main():
    if os.geteuid() == 0:
        print("‚ùå –ù–µ –∑–∞–ø—É—Å–∫–∞–π —Å–∫—Ä–∏–ø—Ç –æ—Ç root!")
        exit(1)
    
    if not SOURCE_DIR.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {SOURCE_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        exit(1)
    
    distro = get_distro()
    if distro == "unknown":
        print("‚ùå –î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω!")
        exit(1)
    
    install_deps(distro)
    backup_configs()
    deploy_configs()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")

if __name__ == "__main__":
    main()